name: Quality checks and deployment
env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize]

jobs:
  lint-test-build:
    name: Format, lint, test and build code
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.15.0]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: 'master'

      - name: Cache node modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install
        run: npm ci
      - name: Workspace lint
        run: npx nx workspace-lint
      - name: Format check
        run: npx nx format:check --base=$NX_BASE --head=$NX_HEAD
      - name: Lint affected --quiet
        run: npx nx affected --base=$NX_BASE --head=$NX_HEAD --target=lint --parallel=3 --quiet
      - name: Test affected
        run: npx nx affected --base=$NX_BASE --head=$NX_HEAD --target=test --parallel=3 --ci --code-coverage
      - name: Build affected
        run: npx nx affected --target=build --parallel=3

  gh-pages:
    name: Deploy Storybook to GitHub Pages
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.15.0]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install
        run: npm ci

      - name: Build storybook
        run: npm run build:storybook

      - name: Build storybook for web components
        run: npm run build:storybook-wc

      - run: echo "::set-env name=BRANCH_NAME::${GITHUB_HEAD_REF:-master}"

      - name: deploy to gh pages
        run: |
          echo "Deploying to directory: ${{env.BRANCH_NAME}}"
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          npx gh-pages --dist dist/ --dest ${{env.BRANCH_NAME}} --remove "${{env.BRANCH_NAME}}/**" --no-history --repo "https://${GITHUB_ACTOR}:${{secrets.GITHUB_TOKEN}}@github.com/${GITHUB_REPOSITORY}.git"

      - name: add PR comment
        uses: thollander/actions-comment-pull-request@v1
        if: github.event_name == 'pull_request'
        with:
          message: 'GitHub Pages links:

            * UI components storybook: https://geonetwork.github.io/geonetwork-ui/${{env.BRANCH_NAME}}/storybook/demo/

            * Web Components storybook: https://geonetwork.github.io/geonetwork-ui/${{env.BRANCH_NAME}}/storybook/webcomponents/'
          comment_includes: 'GitHub Pages links:'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
