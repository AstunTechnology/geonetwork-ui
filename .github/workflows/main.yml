name: Build
env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize]

jobs:
  lint-test-build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [15.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Fetch master for affected code
        run: git fetch --no-tags --prune --depth=5 origin master

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install
        run: npm ci

      - name: Lint
        run: npm run affected:lint

      - name: Check formatting
        run: npm run format:check

      - name: Unit tests
        run: npm run affected:test

      - name: Attempt production build
        run: npm run affected:build

  gh-pages:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install
        run: npm ci

      - name: Build storybook
        run: npm run build:storybook

      - name: Build storybook for web components
        run: npm run build:storybook-wc

      - name: Build Datahub application
        run: npm run build datahub -- --base-href=./

      #      - name: Build webcomponents in production mode and demo pages
      #        run: npm run build:demo

      - run: echo "::set-env name=BRANCH_NAME::${GITHUB_HEAD_REF:-master}"

      - name: deploy to gh pages
        run: |
          echo "Deploying to directory: ${{env.BRANCH_NAME}}"
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          npx gh-pages --dist dist/ --dest ${{env.BRANCH_NAME}} --remove "${{env.BRANCH_NAME}}/**" --no-history --repo "https://${GITHUB_ACTOR}:${{secrets.GITHUB_TOKEN}}@github.com/${GITHUB_REPOSITORY}.git"

      - name: add PR comment
        uses: unsplash/comment-on-pr@master
        if: github.event_name == 'pull_request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: 'GitHub Pages links:

            * Datahub application: https://geonetwork.github.io/geonetwork-ui/${{env.BRANCH_NAME}}/apps/datahub/

            * UI components storybook: https://geonetwork.github.io/geonetwork-ui/${{env.BRANCH_NAME}}/storybook/demo/

            * Web Components storybook: https://geonetwork.github.io/geonetwork-ui/${{env.BRANCH_NAME}}/storybook/webcomponents/'
          check_for_duplicate_msg: true
