name: Checks
run-name: ðŸ©º Quality assurance checks
env:
  NODE_VERSION: 16.17.0

# This workflow runs for Pull Requests which are not draft,
# as well as commits going to the default branch
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, ready_for_review]

# Only allow concurrent checks on the main branch to keep history
# on QA checks
concurrency:
  group: checks-${{ github.ref }}
  cancel-in-progress: ${{ github.ref_name != 'main' }}

jobs:
  format-lint-test:
    if: github.event.pull_request.draft == false
    name: Format check, lint, unit tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: 'main'

      - name: Cache node modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: npm ci

      - name: Workspace lint
        run: npx nx workspace-lint

      - name: Format check
        run: npx nx format:check --base=$NX_BASE --head=$NX_HEAD

      - name: Lint affected --quiet
        run: npx nx affected --base=$NX_BASE --head=$NX_HEAD --target=lint --parallel=3 --quiet

      - name: Test affected
        run: npx nx affected --base=$NX_BASE --head=$NX_HEAD --target=test --parallel=3 --ci --code-coverage

  test-build:
    if: github.event.pull_request.draft == false
    name: Build affected applications
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: 'main'

      - name: Cache node modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: npm ci

      - name: Build affected
        run: npx nx affected --target=build --parallel=3

  deploy:
    needs: ['format-lint-test', 'test-build']
    uses: ./.github/workflows/deploy.yml
    secrets: inherit

  artifacts:
    needs: ['format-lint-test', 'test-build']
    uses: ./.github/workflows/artifacts.yml
    secrets: inherit
